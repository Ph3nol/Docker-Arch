version: "3"

{# ----------------------------------------------------- Networks #}
networks:
    main-network:
        driver: bridge

{# ----------------------------------------------------- Volumes #}
volumes:
    {{ project.identifier }}-logs:
{% for service in project.dockerSynchedServices %}
    {{ project.identifier }}-{{ service.identifier }}-sync:
        external: true
{% endfor %}

{# ----------------------------------------------------- Services #}
services:
{% for service in project.services %}
    {{ service.identifier }}:
        container_name: {{ project.identifier }}-{{ service.identifier }}
        build: ./{{ service.identifier }}
        networks:
            - main-network
{% set links = project.getLinksForService(service) %}
{% if links|length %}
        links:
{% for link in links %}
            - {{ link }}
{% endfor %}
{% endif %}
{% set volumes = project.getVolumesForService(service) %}
{% if volumes|length %}
        volumes:
{% for volume in volumes %}
            - {{ volume.local }}:{{ volume.remote }}{% if volume.type|default(null) %}:{{ volume.type }}{% endif %}

{% endfor %}
{% endif %}
{% set envs = service.dockerContainer.envs %}
{% if envs|length %}
        environment:
{% for key, value in envs %}
            - {{ key }}={{ value }}
{% endfor %}
{% endif %}
{% set ports = service.dockerContainer.ports %}
{% if ports|length %}
        ports:
{% for publicPort, internalPort in ports %}
            - {{ publicPort }}:{{ internalPort }}
{% endfor %}
{% endif %}
{% if service.dockerContainer.isUserCreationEnabled == true %}
        user: {{ service.dockerContainer.user }}
{% endif %}
{% if service.dockerContainer.workingDir %}
        working_dir: {{ service.dockerContainer.workingDir }}
{% endif %}
{% if true == service.isCli or true == service.options.cliOnly|default(false) %}
        stdin_open: true
        tty: true
{% endif %}

{% endfor %}
