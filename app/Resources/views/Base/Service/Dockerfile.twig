{% set dockerContainer = service.dockerContainer %}
# This Dockerfile has been generated by {{ constant('\\Ph3\\DockerArch\\Application\\Architect::TYPE_PROJECT_NAME') }} open source project.

# -------------------------- !!! DO NOT UPDATE THIS FILE !!! --------------------------
# -------------------------- !!! DO NOT UPDATE THIS FILE !!! --------------------------
# -------------------------- !!! DO NOT UPDATE THIS FILE !!! --------------------------

# To make changes, update your project .{{ constant('\\Ph3\\DockerArch\\Application\\Architect::TYPE_PROJECT_CONFIG_FILENAME') }} file,
# and generate your new Docker configuration.

#######################################################################################

# {{ service.identifier }} Dockerfile...

{% if dockerContainer.from %}
FROM {{ dockerContainer.from }}
{% endif %}
LABEL maintainer="{{ dockerContainer.maintainer|raw }}"
# MAINTAINER {{ dockerContainer.maintainer|raw }} # Deprecated
{# ----------------------------------------------------- To-copy entries (COPY part) #}
{% if dockerContainer.copyEntries|length %}

# Copy some entries.
{% endif %}
{% for entryFrom, entryTo in dockerContainer.copyEntries %}
COPY {{ entryFrom }} {{ entryTo }}
{% endfor %}
{# ----------------------------------------------------- Packages (RUN apt-get part) #}
{% if dockerContainer.updatePackagesSources %}

# Update APT sources.
RUN set -xe && \
    apt-get update
{% endif %}
{% if dockerContainer.packages|length %}

# Install package from APT.
RUN apt-get install -y {{ dockerContainer.packages|join(" \\\n    ") }}
{% endif %}
{# ----------------------------------------------------- Commands (RUN part) #}
{% if dockerContainer.commands|length %}

# Let's run some commands, in order to install, configure and customize the container.
{% endif %}
{% for command in dockerContainer.commands %}
RUN {{ command|raw }}
{% endfor %}
{# ----------------------------------------------------- Environment globals (ENV part) #}
{% if dockerContainer.envs|length %}

# Let's run some env globals.
{% endif %}
{% for env, value in dockerContainer.envs %}
ENV {{ env }} {{ value }}
{% endfor %}
{# ----------------------------------------------------- Working directory (WORKDIR) #}
{% if dockerContainer.workingDir %}

# Working directory.
WORKDIR {{ dockerContainer.workingDir }}
{% endif %}
{# ----------------------------------------------------- Entry point (ENTRYPOINT) #}
{% if dockerContainer.entryPoint %}

# Entry point.
ENTRYPOINT {{ dockerContainer.entryPoint }}
{% endif %}
{# ----------------------------------------------------- Done #}

# ... done for {{ service.identifier }}!
